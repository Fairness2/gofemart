{
    "swagger": "2.0",
    "info": {
        "description": "Система баланса поощрений",
        "title": "GoFemart API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/user/balance": {
            "get": {
                "description": "Запрос на получение баланса счета аутентифицированного пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Получение баланса",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Balance"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/api/user/balance/withdraw": {
            "post": {
                "description": "Запрос на вывод суммы с баланса по указанному заказу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Вывод суммы по заказу",
                "parameters": [
                    {
                        "description": "Withdraw payload",
                        "name": "withdraw",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.Withdraw"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "402": {
                        "description": "Not Enough Funds",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "422": {
                        "description": "Withdraw already exists",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "description": "обрабатывает вход пользователя в систему, проверяя учетные данные и генерируя токен авторизации.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь"
                ],
                "summary": "Вход пользователя в систему",
                "parameters": [
                    {
                        "description": "Login Payload",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.Register"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payloads.Authorization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/api/user/orders": {
            "get": {
                "description": "Возвращает список заказов для аутентифицированного пользователя.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Заказы"
                ],
                "summary": "Получить список заказов",
                "responses": {
                    "200": {
                        "description": "Список заказов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderWithAccrual"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "обрабатывает запрос на регистрацию заказа.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Заказы"
                ],
                "summary": "Регистрирует новый заказ",
                "parameters": [
                    {
                        "description": "Order number",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "description": "обрабатывает регистрацию новых пользователей, включая проверку, создание и генерацию токенов.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Register Payload",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.Register"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payloads.Authorization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/payloads.ErrorResponseBody"
                        }
                    }
                }
            }
        },
        "/api/user/withdrawals": {
            "get": {
                "description": "Возвращает список заказов со снятием средств для аутентифицированного пользователя.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Заказы"
                ],
                "summary": "Получить заказы со снятием средств",
                "responses": {
                    "200": {
                        "description": "Список заказов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.OrderWithdraw"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Balance": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "number"
                },
                "withdrawn": {
                    "type": "number"
                }
            }
        },
        "models.JSONTime": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "models.OrderWithAccrual": {
            "type": "object",
            "properties": {
                "accrual": {
                    "type": "number"
                },
                "number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "$ref": "#/definitions/models.JSONTime"
                }
            }
        },
        "models.OrderWithdraw": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string"
                },
                "processed_at": {
                    "$ref": "#/definitions/models.JSONTime"
                },
                "sum": {
                    "type": "number"
                }
            }
        },
        "payloads.Authorization": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "payloads.ErrorResponseBody": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "description": "Успешный или не успешный результат",
                    "type": "integer"
                }
            }
        },
        "payloads.Register": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "payloads.Withdraw": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            }
        }
    }
}